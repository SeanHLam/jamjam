import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import styled from "styled-components";
import Stack from "@mui/material/Stack";
import Button from "@mui/material/Button";
import OpenWeather from "../components/openweather/openWeather";
import { useEffect, useState } from "react";
import axios from "axios";
import PillMenuCard from "../components/pillmenu/pillMenuCard";
import { Wrapper } from "./home";
import Navigation from "../components/navigation/navigation";
import MusicPlayer from "../components/musicplayer/musicPlayer";
import { padding } from "@mui/system";

export const ButtonWrapper = styled.div`
display: flex;
align-items: center;
padding: 2em 5em;
`

function randomIntFromInterval(min, max) {
  return Math.floor(Math.random() * (max - min + 1) + min);
}

export default function Music() {
  const logout = () => {
    setToken("");
    window.localStorage.removeItem("token");
  };
  const [song, setSong] = useState();
  const [token, setToken] = useState("");
  const searchArray = [
    "%25a%25",
    "a%25",
    "%25e%25",
    "e%25",
    "%25i%25",
    "i%25",
    "%25o%25",
    "o%25",
  ];

  const randomSearch =
    searchArray[Math.floor(Math.random() * searchArray.length)];
  const randomOffset = randomIntFromInterval(1, 1000);

  useEffect(() => {
    const hash = window.location.hash;
    let token = window.localStorage.getItem("token");
    if (!token && hash) {
      token = hash
        .substring(1)
        .split("&")
        .find((elem) => elem.startsWith("access_token"))
        .split("=")[1];

      window.location.hash = "";
      window.localStorage.setItem("token", token);
    }
    setToken(token);
  }, []);

  function getRandomSearch() {
    // A list of all characters that can be chosen.
    const characters = "abcdefghijklmnopqrstuvwxyz";

    // Gets a random character from the characters string.
    const randomCharacter = characters.charAt(
      Math.floor(Math.random() * characters.length)
    );
    let randomSearch = "";

    // Places the wildcard character at the beginning, or both beginning and end, randomly.
    switch (Math.round(Math.random())) {
      case 0:
        randomSearch = randomCharacter + "%";
        break;
      case 1:
        randomSearch = "%" + randomCharacter + "%";
        break;
    }

    return randomSearch;
  }

  // const randomSong = async (e) => {
  //   e.preventDefault();
  //   const { data } = await axios
  //     .get("https://api.spotify.com/v1/search", {
  //       headers: {
  //         Authorization: `Bearer ${token}`,
  //       },
  //       params: {
  //         type: "track",
  //         q: getRandomSearch(),
  //         offset: randomOffset,
  //       },
  //     })
  //     .then(() => {

  //     })
  //     .catch((error) => {
  //       if (error.response) {
  //         console.log(error.response.data);
  //       }
  //     });
  //   if (data) {
  //     setSong(data.tracks.items[15]);
  //   }
  // };

  const randomSong = async (e) => {
    e.preventDefault();
    axios
      .get("https://api.spotify.com/v1/search", {
        headers: {
          Authorization: `Bearer ${token}`,
        },
        params: {
          type: "track",
          q: getRandomSearch(),
          offset: randomOffset,
        },
      })
      .then((response) => {
        if (response) {
          setSong(response.data.tracks.items[15]);
        }
      })
      .catch((error) => {
        if (error.response) {
          console.log("this is the error message", error.response.data);
        }
      });
  };

  return (
    <>
      <Head>
        <title>Music</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>
      <Navigation></Navigation>
      <Wrapper>
        <PillMenuCard />

        {song && <MusicPlayer song={song.id} />}
        <ButtonWrapper>
          <Button onClick={randomSong} variant="contained">
            DISLIKE
          </Button>
          <Button sx={{margin:2}} onClick={randomSong} variant="contained">
            LIKE
          </Button>
        </ButtonWrapper>

        <OpenWeather />
      </Wrapper>
    </>
  );
}
