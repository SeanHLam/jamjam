import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import styled, { StyleSheetManager } from "styled-components";
import Stack from "@mui/material/Stack";
import Button from "@mui/material/Button";
import OpenWeather from '../components/openweather/openWeather'
import { useState } from "react";
import { Typography } from "@mui/material";
import AppText from "../components/apptext/apptext";
import CreatorCard from "../components/creatorpick/creatorPick";
import { delay, motion } from "framer-motion"
import { getProviders, signIn } from "next-auth/react";

// const CLIENT_ID = process.env.NEXT_PUBLIC_CLIENT_ID;
// const REDIRECT_URI = "http://localhost:3000/home";
// const AUTH_ENDPOINT = "https://accounts.spotify.com/authorize";
// const RESPONSE_TYPE = "token";

const Wrapper = styled.div`
display: flex;
flex-direction: column;
align-items: center;
justify-content: space-evenly;
padding: 4rem 0;
width:100vw;
min-height:100vh;
`

export default function Login(providers) {

  const container = {
    hidden: { opacity: 0, scale: 0 },
    visible: {
      opacity: 1,
      scale: 1,
      transition: {
        duration: 0.3,
        ease: "linear",
        delayChildren:1,
        type: "spring",
        stiffness: 400, damping: 10
      }
    }
  }
  
  const item = {
    hidden: { opacity: 0 },
    visible: { 
      opacity: 1,
      transition: {
        duration: 0.2,
      }
    }
  }
  
  

  return (
    <div>
      <Head>
        <title>JamJam</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>

      <Wrapper>
          <motion.div
            variants={container}
            initial="hidden"
            animate="visible"
            className={styles.columncenter}
          >
      
            <Image src="/logo.svg" alt="JamJam logo" width={250} height={250} style={{margin:'0 0 3em 0'}}/>

            <motion.div variants={item}>
              <motion.div
                whileHover={{ scale: 1.1 }}
                onHoverStart={e => {}}
                onHoverEnd={e => {}}
                transition={{ type: "spring", stiffness: 400, damping: 10 }}
                >
                {Object.values(providers).map((provider) => (
                  <div key={provider.spotify.name}>
                     <Button onClick={()=> signIn(provider.spotify.id,{callbackUrl:"/home"}) }  size='small' variant="contained">Login To {provider.spotify.name}</Button>
                  </div>
                  
                 
                ))}
                
               
              </motion.div>
            </motion.div>

          </motion.div>
      </Wrapper>
    </div>
  );
}

export async function getServerSideProps() {
  const providers = await getProviders();
  return {
    props: { providers },
  };
}